@model List<ContactListWeb.Models.Contact>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <h2 class="mb-0">Your Contacts</h2>
                    <a asp-action="Create" class="btn btn-light btn-sm">Add New Contact</a>
                </div>
                <div class="card-body">
                    <form asp-action="Search" method="get" class="mb-4">
                        <div class="input-group">
                            <input type="text" 
                                   name="searchTerm" 
                                   class="form-control" 
                                   placeholder="Search by name or phone" />
                            <button type="submit" class="btn btn-primary">Search</button>
                        </div>
                    </form>

                    <div class="table-responsive">
                        <table class="table table-hover table-bordered">
                            <thead class="table-light">
                                <tr>
                                    <th>Name</th>
                                    <th>Phone</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var contact in Model)
                                {
                                    <tr>
                                        <td>@contact.Name</td>
                                        <td>@contact.PhoneNo</td>
                                        <td>
                                            <a asp-action="Edit" 
                                               asp-route-id="@contact.Id" 
                                               class="btn btn-sm btn-warning text-dark">Edit</a>
                                            <a asp-action="Delete" 
                                               asp-route-id="@contact.Id" 
                                               class="btn btn-sm btn-danger">Delete</a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <!-- To-Do List Section -->
                    <h2 class="mt-4">Your To-Do List</h2>
                    <div id="todoList"></div>
                    <div class="mt-3">
                        <input type="number" id="todoId" class="form-control d-inline-block w-auto" placeholder="Enter Todo ID (optional)" />
                        <button onclick="fetchTodos()" class="btn btn-primary">Fetch Todos</button>
                    </div>
                    <div class="mt-3">
                        <input type="text" id="todoTitle" class="form-control d-inline-block w-auto" placeholder="New Todo Title" />
                        <button onclick="createTodo()" class="btn btn-success">Add Todo</button>
                    </div>
                    <div id="errorMessage" class="text-danger mt-2"></div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        function fetchTodos() {
            const todoId = $('#todoId').val();
            let url = '/api/todos';
            if (todoId) {
                url += `/${todoId}`;
            }

            $.ajax({
                url: url,
                type: 'GET',
                success: function (data) {
                    let html = '<ul class="list-group">';
                    if (Array.isArray(data)) {
                        data.forEach(todo => {
                            html += `<li class="list-group-item">${todo.title} (Completed: ${todo.isCompleted}) 
                                <button class="btn btn-sm btn-secondary ms-2" onclick="toggleComplete(${todo.id}, ${!todo.isCompleted})">Toggle</button>
                                <button class="btn btn-sm btn-danger ms-2" onclick="deleteTodo(${todo.id})">Delete</button></li>`;
                        });
                    } else {
                        html += `<li class="list-group-item">${data.title} (Completed: ${data.isCompleted}) 
                            <button class="btn btn-sm btn-secondary ms-2" onclick="toggleComplete(${data.id}, ${!data.isCompleted})">Toggle</button>
                            <button class="btn btn-sm btn-danger ms-2" onclick="deleteTodo(${data.id})">Delete</button></li>`;
                    }
                    html += '</ul>';
                    $('#todoList').html(html);
                    $('#errorMessage').html('');
                },
                error: function (xhr, status, error) {
                    handleAjaxError(xhr, status, error);
                }
            });
        }

        function createTodo() {
            const title = $('#todoTitle').val();
            if (!title) {
                $('#errorMessage').html('Please enter a title.');
                return;
            }

            $.ajax({
                url: '/api/todos',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ title: title, isCompleted: false }),
                success: function (data) {
                    $('#todoTitle').val('');
                    fetchTodos();
                },
                error: function (xhr, status, error) {
                    handleAjaxError(xhr, status, error);
                }
            });
        }

        function toggleComplete(id, isCompleted) {
            $.ajax({
                url: `/api/todos/${id}`,
                type: 'PUT',
                contentType: 'application/json',
                data: JSON.stringify({ id: id, title: '', isCompleted: isCompleted }),
                success: function () {
                    fetchTodos();
                },
                error: function (xhr, status, error) {
                    handleAjaxError(xhr, status, error);
                }
            });
        }

        function deleteTodo(id) {
            if (confirm('Are you sure you want to delete this todo?')) {
                $.ajax({
                    url: `/api/todos/${id}`,
                    type: 'DELETE',
                    success: function () {
                        fetchTodos();
                    },
                    error: function (xhr, status, error) {
                        handleAjaxError(xhr, status, error);
                    }
                });
            }
        }

        function handleAjaxError(xhr, status, error) {
            let message = 'An error occurred.';
            if (xhr.status === 401) {
                message = 'Please log in to perform this action.';
            } else if (xhr.status === 404) {
                message = 'Todo not found.';
            } else if (xhr.status === 400) {
                message = 'Invalid request data.';
            } else if (xhr.status === 500) {
                message = 'Server error. Please try again later.';
            }
            $('#errorMessage').html(message);
        }
    </script>
}